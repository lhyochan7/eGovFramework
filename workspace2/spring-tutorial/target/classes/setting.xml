<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	   xmlns:context="http://www.springframework.org/schema/context" 
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
	   http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd 
	   http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">
	
	<context:component-scan base-package="app">
		<context:exclude-filter type="assignable" expression="app.config.SpringAutoAppConfig"/>
		<context:exclude-filter type="assignable" expression="app.config.SpringAppConfig"/>
	</context:component-scan>
	
	<aop:aspectj-autoproxy />
		
		<bean id="aspectUsingAnnotation" class="app.aop.annotation.AspectUsingAnnotation"></bean>

<!-- 	<bean id="memberRepository" class="app.member.repository.MemoryMemberRepository"> -->
	
<!-- 	</bean> -->

<!-- 	<bean id="memberService" class="app.member.service.MemberServiceImpl"> -->
<!-- 		<constructor-arg name="memberRepository" ref="memberRepository"></constructor-arg> -->
<!-- 	</bean> -->
	
<!-- 	<bean id="logAroundAdvice" class="app.aop.advice.LogAroundAdvice"/> -->
<!-- 	<bean id="logBeforeAdvice" class="app.aop.advice.LogBeforeAdvice"/> -->
<!-- 	<bean id="logAfterReturningAdvice" class="app.aop.advice.LogAfterReturningAdvice"/> -->
<!-- 	<bean id="logAfterThrowingAdvice" class="app.aop.advice.LogAfterThrowingAdvice"/> -->
	
<!-- 	<bean id="classicPointcut" class="org.springframework.aop.support.NameMatchMethodPointcut"> -->
<!-- 		<property name="mappedName" value="findMember"></property> -->
<!-- 	</bean> -->
	
<!-- 	<bean id="classicAroundAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor"> -->
<!-- 		<property name="advice" ref="logAroundAdvice"></property> -->
<!-- 		<property name="pointcut" ref="classicPointcut"></property> -->
<!-- 	</bean> -->
	
	
<!-- 	<bean id="proxy" class="org.springframework.aop.framework.ProxyFactoryBean"> -->
<!-- 		<property name="target" ref="memberService"/> -->
<!-- 		<property name="interceptorNames"> -->
<!-- 			<list> -->
<!-- 				<value>classicAroundAdvisor</value> -->
<!-- 				<value>logBeforeAdvice</value> -->
<!-- 				<value>logAfterReturningAdvice</value> -->
<!-- 				<value>logAfterThrowingAdvice</value> -->
<!-- 			</list> -->
<!-- 		</property> -->
<!-- 	</bean> -->
</beans>